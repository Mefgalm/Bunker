// <auto-generated />
using System;
using Bunker.Business.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Bunker.Business.Migrations
{
    [DbContext(typeof(BunkerDbContext))]
    [Migration("20180613154230_init-create")]
    partial class initcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Bunker.Business.Entities.Challange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CompanyId");

                    b.Property<string>("Desciprion")
                        .IsRequired()
                        .HasMaxLength(10000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Challanges");
                });

            modelBuilder.Entity("Bunker.Business.Entities.ChallangeTeam", b =>
                {
                    b.Property<int>("ChallangeId");

                    b.Property<int>("TeamId");

                    b.HasKey("ChallangeId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("ChallangeTeams");
                });

            modelBuilder.Entity("Bunker.Business.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Desciprion")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Bunker.Business.Entities.CompanyPlayer", b =>
                {
                    b.Property<int>("CompanyId");

                    b.Property<int>("PlayerId");

                    b.HasKey("CompanyId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("CompanyPlayers");
                });

            modelBuilder.Entity("Bunker.Business.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Bunker.Business.Entities.PlayerTask", b =>
                {
                    b.Property<int>("PlayerId");

                    b.Property<int>("TaskId");

                    b.HasKey("PlayerId", "TaskId");

                    b.HasIndex("TaskId");

                    b.ToTable("PlayerTask");
                });

            modelBuilder.Entity("Bunker.Business.Entities.PlayerTeam", b =>
                {
                    b.Property<int>("PlayerId");

                    b.Property<int>("TeamId");

                    b.HasKey("PlayerId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("PlayerTeams");
                });

            modelBuilder.Entity("Bunker.Business.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answer")
                        .HasMaxLength(200);

                    b.Property<int?>("ChallangeId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("PlayerId");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.HasIndex("ChallangeId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Bunker.Business.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Bunker.Business.Entities.Challange", b =>
                {
                    b.HasOne("Bunker.Business.Entities.Company")
                        .WithMany("Challanges")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("Bunker.Business.Entities.ChallangeTeam", b =>
                {
                    b.HasOne("Bunker.Business.Entities.Challange", "Challange")
                        .WithMany()
                        .HasForeignKey("ChallangeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bunker.Business.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bunker.Business.Entities.CompanyPlayer", b =>
                {
                    b.HasOne("Bunker.Business.Entities.Company", "Company")
                        .WithMany("Players")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bunker.Business.Entities.Player", "Player")
                        .WithMany("Companies")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bunker.Business.Entities.PlayerTask", b =>
                {
                    b.HasOne("Bunker.Business.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bunker.Business.Entities.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bunker.Business.Entities.PlayerTeam", b =>
                {
                    b.HasOne("Bunker.Business.Entities.Player", "Player")
                        .WithMany("Teams")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bunker.Business.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bunker.Business.Entities.Task", b =>
                {
                    b.HasOne("Bunker.Business.Entities.Challange")
                        .WithMany("Tasks")
                        .HasForeignKey("ChallangeId");

                    b.HasOne("Bunker.Business.Entities.Player", "Player")
                        .WithMany("Tasks")
                        .HasForeignKey("PlayerId");
                });
#pragma warning restore 612, 618
        }
    }
}
